"""
client_core.py
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Central dispatcher for client actions.
Delegates to bookings, invoices, attendance, and notify modules.
"""

from __future__ import annotations
import logging
from typing import Optional
from .utils import send_whatsapp_text, normalize_wa, safe_execute
from .client_nlp import parse_client_command
from . import client_bookings, client_attendance
from .prospect import CLIENT_MENU, _client_get  # âœ… reuse client lookup + menu

log = logging.getLogger(__name__)


def handle_client_action(from_wa: str, msg_id: Optional[str], body: str):
    """Main entrypoint for inbound client actions (normal clients)."""
    wa = normalize_wa(from_wa)
    text_in = (body or "").strip()

    log.info(f"[CLIENT] from={from_wa} body={body!r}")

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Shortcut: greetings â†’ show menu â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if text_in.lower() in {"hi", "hello", "hey"}:
        client = _client_get(wa)
        cname = client["name"] if client else "there"
        safe_execute(
            send_whatsapp_text,
            wa,
            CLIENT_MENU.format(name=cname),
            label="client_menu_greeting",
        )
        return

    parsed = parse_client_command(text_in)
    if not parsed:
        # âœ… Fallback now greets by name if available
        client = _client_get(wa)
        cname = client["name"] if client else "there"
        safe_execute(
            send_whatsapp_text,
            wa,
            f"ðŸ’œ Hi {cname}, I didnâ€™t understand that.\n"
            "Type *menu* to see what I can do for you.",
            label="client_fallback",
        )
        return

    intent = parsed["intent"]
    log.info(f"[CLIENT CMD] parsed={parsed}")

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Menu â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "menu":
        client = _client_get(wa)
        cname = client["name"] if client else "there"
        safe_execute(
            send_whatsapp_text,
            wa,
            CLIENT_MENU.format(name=cname),
            label="client_menu",
        )
        return

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ View Bookings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "show_bookings":
        client_bookings.show_bookings(wa)
        return

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Cancel Next â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "cancel_next":
        client_bookings.cancel_next(wa)
        return

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Cancel Specific â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "cancel_specific":
        client_bookings.cancel_specific(wa, parsed["day"], parsed["time"])
        return

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Attendance Updates â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "off_sick_today":
        client_attendance.mark_sick_today(wa)
        return

    if intent == "cancel_today":
        client_attendance.cancel_today(wa)
        return

    if intent == "running_late":
        client_attendance.running_late(wa)
        return

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Invoices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "get_invoice":
        safe_execute(
            send_whatsapp_text,
            wa,
            "ðŸ“‘ Invoices are currently managed directly by Nadine. Please contact her if you need a copy.",
            label="client_invoice_redirect",
        )
        return

    if intent == "balance":
        safe_execute(
            send_whatsapp_text,
            wa,
            "ðŸ“Š Balance requests are not yet automated. Please contact Nadine for details.",
            label="client_balance_redirect",
        )
        return

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ FAQs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "faq":
        safe_execute(
            send_whatsapp_text,
            wa,
            "â„¹ PilatesHQ Info:\n\n"
            "â€¢ Reformer Single = R300\n"
            "â€¢ Reformer Duo = R250\n"
            "â€¢ Reformer Trio = R200\n\n"
            "Type 'sessions' to view your bookings or 'invoice' to get your statement.",
            label="client_faq",
        )
        return

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Contact Nadine â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    if intent == "contact_admin":
        safe_execute(
            send_whatsapp_text,
            wa,
            "ðŸ“ž You can reach Nadine directly at: 0627597357",
            label="client_contact_admin",
        )
        return
